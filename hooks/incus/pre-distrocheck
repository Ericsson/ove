#!/usr/bin/env bash
# SPDX-License-Identifier: MIT
#
# MIT License
#
# Copyright (c) 2023 Ericsson
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is furnished
# to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice (including the next
# paragraph) shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS
# OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
# OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

set -e

function _debian {
	if [ "${OVE_OS_ID_LIKE,,}" = "debian" ]; then
		return 0
	elif [ "${OVE_OS_ID_LIKE,,}" = "ubuntu" ]; then
		return 0
	elif [[ ${OVE_OS} == *"Debian"* ]]; then
		return 0
	elif [[ ${OVE_OS} == *"Ubuntu"* ]]; then
		return 0
	else
		return 1
	fi
}

function pre {
	local c
	local deps

	if command -v incus > /dev/null; then
		exit 0
	elif ! _debian; then
		echo "info: ${OVE_OS} is not supported"
		exit 0
	fi

	set -x
	deps+=" adduser"
	deps+=" curl"
	deps+=" dpkg"
	deps+=" gpg"
	deps+=" sg"
	deps+=" usermod"

	for c in ${deps}; do
		if ! command -v "${c}" > /dev/null; then
			echo "error: command '${c}' is missing" 1>&2
			exit 1
		fi
	done

	if [ "$EUID" -ne 0 ]; then
		prefix="sudo"
	fi
}

function verify {
	if [ ! -s "${OVE_TMP:?}/incus-key.asc" ]; then
		curl -fsSL https://pkgs.zabbly.com/key.asc > "${OVE_TMP:?}/incus-key.asc"
	elif ! gpg --show-keys --fingerprint "${OVE_TMP:?}/incus-key.asc" 2> /dev/null | \
		grep -q "4EFC 5906 96CB 15B8 7C73  A3AD 82CC 8797 C838 DCFD"; then
		rm "${OVE_TMP:?}/incus-key.asc"
		echo "fatal: gpg key mismatch! Key '${OVE_TMP:?}/incus-key.asc' removed" 1>&2
		exit 1
	fi
}

function key {
	${prefix:?} mkdir \
		-p \
		-v \
		/etc/apt/keyrings
	${prefix:?} bash \
		-c \
		"cp -a ${OVE_TMP:?}/incus-key.asc /etc/apt/keyrings/zabbly.asc"
}

function sources {
	# shellcheck disable=SC2016
	${prefix:?} sh -c 'cat <<EOF > /etc/apt/sources.list.d/zabbly-incus-stable.sources
Enabled: yes
Types: deb
URIs: https://pkgs.zabbly.com/incus/stable
Suites: $(. /etc/os-release && echo ${VERSION_CODENAME})
Components: main
Architectures: $(dpkg --print-architecture)
Signed-By: /etc/apt/keyrings/zabbly.asc

EOF'
}

function install {
	export DEBIAN_FRONTEND=noninteractive
	${prefix:?} \
		apt-get \
		-qq \
		update
	${prefix:?} \
		apt-get \
		-qq \
		-y \
		-o=Dpkg::Progress=0 \
		-o=Dpkg::Progress-Fancy=false \
		install \
		incus
	incus --version
}

function init {
	local ret

	ret=0

	${prefix:?} adduser --quiet "${OVE_USER:?}" incus-admin
	set +x
	set +e
	read \
		-p "minimal incus installation? (this dialog will timeout in 30 seconds) (Y/n) " \
		-r \
		-t 30
	ret=$?
	set -x
	if [ "${REPLY,}" = "y" ] || [ "${ret}" -gt 128 ]; then
		suffix="--minimal"
	fi
	sg incus-admin -c "incus admin init ${suffix}"
	${prefix:?} usermod -aG incus-admin "${OVE_USER:?}"
	if ! sg incus-admin -c "incus list" > /dev/null; then
		echo "error: not possible to run 'incus list'" 1>&2
		exit 1
	fi
	set +x

	echo "---"
	echo "incus is now installed. To proceed, you have two options:"
	echo
	echo "a) logout and login"
	echo "b) exec sg incus-admin \"newgrp \$(id -gn)\""
	echo
	echo "After a or b, re-run the same 'ove distrocheck' command that got you here."
	echo "---"
	exit 42
}

pre
verify
key
sources
install
init
